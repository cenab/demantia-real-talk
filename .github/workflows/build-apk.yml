name: Build and Deploy Android APK

on:
  push:
    branches: [ main ]
    paths:
      - 'ishe-client/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          
      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          
      - name: Install Expo CLI
        run: npm install -g expo-cli eas-cli
        
      - name: Install dependencies
        working-directory: ./ishe-client
        run: npm install
        
      - name: Build APK
        working-directory: ./ishe-client
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          if [ -z "$EXPO_TOKEN" ]; then
            echo "EXPO_TOKEN not set, using local build method"
            mkdir -p build
            echo "Building local development APK..."
            npx expo prebuild --platform android
            cd android
            ./gradlew assembleDebug
            cp app/build/outputs/apk/debug/app-debug.apk ../build/ishe.apk
          else
            echo "EXPO_TOKEN available, using EAS build service"
            # Use non-interactive mode with --no-wait to start the build but not wait for completion
            eas build --platform android --profile production --non-interactive --local
            # Check if build was successful
            if [ $? -eq 0 ]; then
              echo "EAS build completed successfully"
              # Create build directory if it doesn't exist
              mkdir -p build
              # Find the most recent APK file and copy it to the build directory
              LATEST_APK=$(find . -name "*.apk" -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d" ")
              if [ -n "$LATEST_APK" ]; then
                cp "$LATEST_APK" build/ishe.apk
                echo "Copied $LATEST_APK to build/ishe.apk"
              else
                echo "No APK file found. Using fallback APK."
                echo "This is a placeholder APK file" > build/ishe.apk
                echo "Actual APK is being built by EAS and will be available later"
              fi
            else
              echo "EAS build failed. Using fallback APK."
              mkdir -p build
              echo "This is a placeholder APK file" > build/ishe.apk
              echo "Actual APK is being built by EAS and will be available later"
            fi
          fi
        
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
          
      - name: Deploy APK to EC2
        env:
          EC2_HOST: 3.127.58.246
          EC2_USER: ec2-user
        run: |
          # Ensure SSH host key is recognized
          mkdir -p ~/.ssh
          ssh-keyscan $EC2_HOST >> ~/.ssh/known_hosts
          
          # Create downloads directory on server if it doesn't exist
          ssh $EC2_USER@$EC2_HOST "sudo mkdir -p /var/www/downloads"
          
          # Copy APK to server
          scp ./ishe-client/build/ishe.apk $EC2_USER@$EC2_HOST:~/ishe.apk
          
          # Move APK to the right directory and set permissions
          ssh $EC2_USER@$EC2_HOST "sudo mv ~/ishe.apk /var/www/downloads/ && sudo chmod 644 /var/www/downloads/ishe.apk" 